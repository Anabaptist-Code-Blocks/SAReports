<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <configSections>
        <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
            <section name="SAReportsAddin.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
        </sectionGroup>
    </configSections>
    <applicationSettings>
        <SAReportsAddin.Properties.Settings>
            <setting name="HeadHtml" serializeAs="String">
                <value>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;

&lt;head&gt;
  &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
  &lt;title&gt;Consolidated Security Applicance Report&lt;/title&gt;

  &lt;script type="text/javascript"&gt;
    // Polyfill for IE - https://developer.mozilla.org/en-US/docs/Web/API/Element/closest
    if (!Element.prototype.matches)
      Element.prototype.matches = Element.prototype.msMatchesSelector ||
        Element.prototype.webkitMatchesSelector;

    if (!Element.prototype.closest)
      Element.prototype.closest = function (s) {
        var el = this;
        if (!document.documentElement.contains(el)) return null;
        do {
          if (el.matches(s)) return el;
          el = el.parentElement || el.parentNode;
        } while (el !== null);
        return null;
      };

    function extend(obj, src) {
      // Merge 2 objects into one
      Object.keys(src).forEach(function (key) { obj[key] = src[key]; });
      return obj;
    }

    function buildPath(params) {
      // Takes JS object and builds URL query params
      // for the LogLine Viewer, so the user can
      // browse the data behind this report.
      // modified from http://stackoverflow.com/questions/6566456/how-to-serialize-a-object-into-a-list-of-parameters
      var pairs = [];
      for (var prop in params) {
        if (!params.hasOwnProperty(prop)) {
          continue;
        }
        if (Object.prototype.toString.call(params[prop]) == '[object Object]') {
          pairs.push(buildPath(params[prop]));
          continue;
        }
        pairs.push(prop + '=' + encodeURIComponent(params[prop]));
      }
      return pairs.join('&amp;');
    }

    function LogLineViewerURL() {
      // Data attributes are assigned at two places:
      // 1. to the context of the object calling this LogLineViewerURL function
      // 2. to the closest parent DIV tag

      // This function will be dynamically added to elements where
      // loading the background data in the console is desirable

      var object_params = this.dataset;
      var parent_params = this.closest('div').dataset;
      var params = extend(object_params, parent_params);
      var url = params.url;
      delete params['url'];

      var urlpath = buildPath(params);
      window.open(url + urlpath, '_blank');
    }

    document.addEventListener("DOMContentLoaded", function () {

      // Set the "onclick" method after loading, so we have
      // access to the a tag's "this" context.
      var genre_sections = document.getElementsByClassName('genre_sections');
      Object.keys(genre_sections).forEach(function (key) {
        genre_sections[key].onclick = LogLineViewerURL;
      });
    });


    /*! pygal.js           2015-10-30 */
    function init()
    {
    (function () { var a, b, c, d, e, f, g, h, i, j, k; i = "http://www.w3.org/2000/svg", k = "http://www.w3.org/1999/xlink", a = function (a, b) { return null == b &amp;&amp; (b = null), b = b || document, Array.prototype.slice.call(b.querySelectorAll(a), 0).filter(function (a) { return a !== b }) }, e = function (a, b) { return (a.matches || a.matchesSelector || a.msMatchesSelector || a.mozMatchesSelector || a.webkitMatchesSelector || a.oMatchesSelector).call(a, b) }, h = function (a, b) { return null == b &amp;&amp; (b = null), Array.prototype.filter.call(a.parentElement.children, function (c) { return c !== a &amp;&amp; (!b || e(c, b)) }) }, Array.prototype.one = function () { return this.length &gt; 0 &amp;&amp; this[0] || {} }, f = 5, j = null, g = /translate\((\d+)[ ,]+(\d+)\)/, b = function (a) { return (g.exec(a.getAttribute("transform")) || []).slice(1).map(function (a) { return +a }) }, c = function (c) { var d, g, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H; for (a("svg", c).length ? (o = a("svg", c).one(), q = o.parentElement, g = o.viewBox.baseVal, d = q.getBBox(), w = function (a) { return (a - g.x) / g.width * d.width }, x = function (a) { return (a - g.y) / g.height * d.height }) : w = x = function (a) { return a }, null != (null != (E = window.pygal) ? E.config : void 0) ? null != window.pygal.config.no_prefix ? l = window.pygal.config : (u = c.id.replace("chart-", ""), l = window.pygal.config[u]) : l = window.config, s = null, n = a(".graph").one(), t = a(".tooltip", c).one(), F = a(".reactive", c), y = 0, B = F.length; B &gt; y; y++)m = F[y], m.addEventListener("mouseenter", function (a) { return function () { return a.classList.add("active") } }(m)), m.addEventListener("mouseleave", function (a) { return function () { return a.classList.remove("active") } }(m)); for (G = a(".activate-serie", c), z = 0, C = G.length; C &gt; z; z++)m = G[z], p = m.id.replace("activate-serie-", ""), m.addEventListener("mouseenter", function (b) { return function () { var d, e, f, g, h, i, j, k; for (i = a(".serie-" + b + " .reactive", c), e = 0, g = i.length; g &gt; e; e++)d = i[e], d.classList.add("active"); for (j = a(".serie-" + b + " .showable", c), k = [], f = 0, h = j.length; h &gt; f; f++)d = j[f], k.push(d.classList.add("shown")); return k } }(p)), m.addEventListener("mouseleave", function (b) { return function () { var d, e, f, g, h, i, j, k; for (i = a(".serie-" + b + " .reactive", c), e = 0, g = i.length; g &gt; e; e++)d = i[e], d.classList.remove("active"); for (j = a(".serie-" + b + " .showable", c), k = [], f = 0, h = j.length; h &gt; f; f++)d = j[f], k.push(d.classList.remove("shown")); return k } }(p)), m.addEventListener("click", function (b, d) { return function () { var e, f, g, h, i, j, k, l, m, n, o; for (g = a("rect", b).one(), h = "" !== g.style.fill, g.style.fill = h ? "" : "transparent", m = a(".serie-" + d + " .reactive", c), i = 0, k = m.length; k &gt; i; i++)f = m[i], f.style.display = h ? "" : "none"; for (n = a(".text-overlay .serie-" + d, c), o = [], j = 0, l = n.length; l &gt; j; j++)e = n[j], o.push(e.style.display = h ? "" : "none"); return o } }(m, p)); for (H = a(".tooltip-trigger", c), A = 0, D = H.length; D &gt; A; A++)m = H[A], m.addEventListener("mouseenter", function (a) { return function () { return s = r(a) } }(m)); return t.addEventListener("mouseenter", function () { return null != s ? s.classList.add("active") : void 0 }), t.addEventListener("mouseleave", function () { return null != s ? s.classList.remove("active") : void 0 }), c.addEventListener("mouseleave", function () { return j &amp;&amp; clearTimeout(j), v(0) }), n.addEventListener("mousemove", function (a) { return !j &amp;&amp; e(a.target, ".background") ? v(1e3) : void 0 }), r = function (c) { var d, e, g, m, n, o, p, r, s, u, v, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, $, _; for (clearTimeout(j), j = null, t.style.opacity = 1, t.style.display = "", G = a("g.text", t).one(), C = a("rect", t).one(), G.innerHTML = "", v = h(c, ".label").one().textContent, N = h(c, ".x_label").one().textContent, J = h(c, ".value").one().textContent, O = h(c, ".xlink").one().textContent, D = null, q = c, I = []; q &amp;&amp; (I.push(q), !q.classList.contains("series"));)q = q.parentElement; if (q) for (X = q.classList, R = 0, S = X.length; S &gt; R; R++)if (g = X[R], 0 === g.indexOf("serie-")) { D = +g.replace("serie-", ""); break } for (y = null, null !== D &amp;&amp; (y = l.legends[D]), o = 0, u = [[v, "label"]], Y = J.split("\n"), r = V = 0, T = Y.length; T &gt; V; r = ++V)E = Y[r], u.push([E, "value-" + r]); for (l.tooltip_fancy_mode &amp;&amp; (u.push([O, "xlink"]), u.unshift([N, "x_label"]), u.unshift([y, "legend"])), H = {}, W = 0, U = u.length; U &gt; W; W++)Z = u[W], s = Z[0], z = Z[1], s &amp;&amp; (F = document.createElementNS(i, "text"), F.textContent = s, F.setAttribute("x", f), F.setAttribute("dy", o), F.classList.add(0 === z.indexOf("value") ? "value" : z), 0 === z.indexOf("value") &amp;&amp; l.tooltip_fancy_mode &amp;&amp; F.classList.add("color-" + D), "xlink" === z ? (d = document.createElementNS(i, "a"), d.setAttributeNS(k, "href", s), d.textContent = void 0, d.appendChild(F), F.textContent = "Link &gt;", G.appendChild(d)) : G.appendChild(F), o += F.getBBox().height + f / 2, e = f, void 0 !== F.style.dominantBaseline ? F.style.dominantBaseline = "text-before-edge" : e += .8 * F.getBBox().height, F.setAttribute("y", e), H[z] = F); return K = G.getBBox().width + 2 * f, p = G.getBBox().height + 2 * f, C.setAttribute("width", K), C.setAttribute("height", p), H.value &amp;&amp; H.value.setAttribute("dx", (K - H.value.getBBox().width) / 2 - f), H.x_label &amp;&amp; H.x_label.setAttribute("dx", K - H.x_label.getBBox().width - 2 * f), H.xlink &amp;&amp; H.xlink.setAttribute("dx", K - H.xlink.getBBox().width - 2 * f), M = h(c, ".x").one(), Q = h(c, ".y").one(), L = parseInt(M.textContent), M.classList.contains("centered") ? L -= K / 2 : M.classList.contains("left") ? L -= K : M.classList.contains("auto") &amp;&amp; (L = w(c.getBBox().x + c.getBBox().width / 2) - K / 2), P = parseInt(Q.textContent), Q.classList.contains("centered") ? P -= p / 2 : Q.classList.contains("top") ? P -= p : Q.classList.contains("auto") &amp;&amp; (P = x(c.getBBox().y + c.getBBox().height / 2) - p / 2), $ = b(t.parentElement), A = $[0], B = $[1], L + K + A &gt; l.width &amp;&amp; (L = l.width - K - A), P + p + B &gt; l.height &amp;&amp; (P = l.height - p - B), 0 &gt; L + A &amp;&amp; (L = -A), 0 &gt; P + B &amp;&amp; (P = -B), _ = b(t), m = _[0], n = _[1], m === L &amp;&amp; n === P ? c : (t.setAttribute("transform", "translate(" + L + " " + P + ")"), c) }, v = function (a) { return j = setTimeout(function () { return t.style.display = "none", t.style.opacity = 0, null != s &amp;&amp; s.classList.remove("active"), j = null }, a) } }, d = function () { var b, d, e, f, g; if (d = a(".pygal-chart"), d.length) { for (g = [], e = 0, f = d.length; f &gt; e; e++)b = d[e], g.push(c(b)); return g } }, "loading" !== document.readyState ? d() : document.addEventListener("DOMContentLoaded", function () { return d() }), window.pygal = window.pygal || {}, window.pygal.init = c, window.pygal.init_svg = d }).call(this);}
  &lt;/script&gt;

  &lt;!-- Bootswatch styles are preferred, so load last, except where overrides are needed --&gt;

  &lt;link rel="stylesheet" href="https:///static/css/bootswatch_theme.min.css" media="all"&gt;


  &lt;style&gt;
    body {
      line-height: 1.5;
      font-family: "Roberto", "Helvetica Neue", Arial, Helvetica, sans-serif;
      color: #000;
      background: none;
      font-size: 10pt;
      -webkit-print-color-adjust: exact;
    }

    .container {
      margin-right: auto;
      margin-left: auto;
      padding-left: 15px;
      padding-right: 15px;
      background: none;
      width: 970px;
    }

    hr {
      box-sizing: content-box;
      height: 0;
    }

    hr.space {
      background: #fff;
      color: #fff;
      visibility: hidden;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      page-break-after: avoid;
    }

    blockquote {
      margin: 1.5em;
      padding: 1em;
      font-style: italic;
      font-size: .9em;
    }

    th {
      background: rgb(218, 229, 244);
      text-align: center;
    }

    td {
      vertical-align: top;
    }

    figure {
      margin-left: 7px;
      margin-top: 0px;
      margin-bottom: 0px;
    }

    /* duplicate some basic classes so report still renders correctly
even on non-internet connected computers where bootstrap isn't available */
    .text-center {
      text-align: center;
    }

    .text-left {
      text-align: left;
    }

    /* offset bootstrap's 10px margin-bottom */
    p {
      margin-bottom: 0px;
    }

    .small {
      font-size: .9em;
    }

    .large {
      font-size: 1.1em;
    }

    .quiet {
      color: #999;
    }

    .hide {
      display: none;
    }

    .align_top {
      vertical-align: top;
    }

    .pagebreak {
      page-break-after: always;
    }

    .odd {
      background: #FFF;
    }

    .even {
      background: #dae5f4;
    }

    .fullwidth {
      width: 100%;
    }

    .unicol,
    .tricol,
    .pageviewstricol,
    .quadcol {
      padding: 5px;
      width: 100%;
      -webkit-column-rule: 1px solid lightblue;
      /* Chrome, Safari, Opera */
      -moz-column-rule: 1px solid lightblue;
      /* Firefox */
      column-rule: 1px solid lightblue;
    }

    .tricol,
    .pageviewstricol {
      -webkit-column-count: 3;
      /* Chrome, Safari, Opera */
      -moz-column-count: 3;
      /* Firefox */
      column-count: 3;
    }

    .quadcol {
      -webkit-column-count: 4;
      /* Chrome, Safari, Opera */
      -moz-column-count: 4;
      /* Firefox */
      column-count: 4;
    }

    .unicol span,
    .tricol span,
    .pageviewstricol span,
    .quadcol span {
      padding-top: 2px;
    }

    /* don't let the domain name or search term overflow */
    .unicol span,
    .tricol span:nth-child(1),
    .pageviewstricol span:nth-child(1),
    .quadcol span:nth-child(1) {
      overflow: hidden;
      display: inline-block;
    }

    .unicol span:nth-child(1) {
      width: 87%
    }

    .tricol span:nth-child(1) {
      width: 81%
    }

    .pageviewstricol span:nth-child(1) {
      width: 66%
    }

    .quadcol span:nth-child(1) {
      width: 77%
    }

    .unicol div,
    .tricol div,
    .pageviewstricol div,
    .quadcol div {
      padding-top: 3px;
      margin-bottom: 2px;
      padding-left: 10px;
    }

    .unicol span:nth-child(2),
    .tricol span:nth-child(2),
    .pageviewstricol span:nth-child(2),
    .pageviewstricol span:nth-child(3),
    .quadcol span:nth-child(2) {
      display: inline-block;
      float: right;
      text-align: center;
      border-left: 1px solid white;
    }

    .unicol span:nth-child(2) {
      width: 10%;
    }

    .tricol span:nth-child(2),
    .pageviewstricol span:nth-child(2),
    .pageviewstricol span:nth-child(3) {
      width: 16%;
    }

    .quadcol span:nth-child(2) {
      width: 22%;
    }

    .urllist {
      width: 100%;
      border-collapse: collapse;
      font-size: 10pt;
      padding: 1px;
      /*border-bottom:#FFF 2px solid;*/
      overflow: hidden;
      white-space: nowrap;
      table-layout: fixed;
    }

    .headings {
      background: rgba(204, 244, 206, 0.3);
      border: rgba(20, 142, 84, .7) 1px solid;
      border-radius: 15px;
    }

    .dom_c1 {
      font-size: 8.5pt;
      padding-left: 5px;
      border: #FFF 1px solid;
      overflow: hidden;
      white-space: nowrap;
      font-size: 8.5pt;
      padding-left: 5px;
      border: #FFF 1px solid;
      overflow: hidden;
      white-space: nowrap;
      width: 75%;
    }

    .dom_stats_c1 {
      font-size: 8pt;
      padding-left: 2px;
      border: #FFF 1px solid;
      width: 25%;
    }

    .genrecol {
      padding: 5px;
      margin-bottom: 20px;
      -webkit-column-count: 3;
      /* Chrome, Safari, Opera */
      -moz-column-count: 3;
      /* Firefox */
      column-count: 3;
      -webkit-column-rule: 1px solid lightblue;
      /* Chrome, Safari, Opera */
      -moz-column-rule: 1px solid lightblue;
      /* Firefox */
      column-rule: 1px solid lightblue;
    }

    /*
Apply top margin to an hr tag in between Genre groups
because webkit browsers would carry margin-bottom on "genrecol ol"
*/
    .genrecol hr {
      margin-top: 10px;
      margin-bottom: 0px;
      border-top: 0px;
    }

    .genrecol a {
      color: black;
      text-decoration: none;
    }

    .genrecol ol {
      margin: 0px;
      padding-left: 0px;
      list-style-type: none;
      -webkit-column-break-inside: avoid;
      page-break-inside: avoid;
      break-inside: avoid;
    }

    .genrecol ol li {
      margin-bottom: 2px;
      padding-top: 6px;
      padding-bottom: 6px;
      padding-left: 5%;
      border-top: rgb(80, 80, 80) 1px solid;
    }

    .genrecol ol&gt;li:first-child {
      padding-top: 10px;
      padding-bottom: 10px;
      padding-left: 3%;
      font-weight: bold;
      font-size: 12pt;
      border: rgba(141, 180, 223, 1) 2px solid;
      background: rgba(141, 180, 223, .5);
    }

    .genrecol span {
      display: block;
      width: 15%;
      float: right;
      text-align: center;
    }

    /* IE10+ has SVG scaling issues */
    @media screen and (-ms-high-contrast: active),
    (-ms-high-contrast: none) {
      figure {
        width: 100%;
        padding-top: 48%;
        position: relative;
      }

      svg {
        position: absolute;
        top: 0;
        left: 0;
      }
    }

    .rating_misc,
    .rating_base,
    .rating_silt,
    .rating_sand,
    .rating_pebble,
    .rating_stone,
    .rating_rock,
    .rating_boulder {
      text-decoration: none;
    }

    .color_key {
      font-size: 10pt;
      font-weight: bold;
      text-align: center;
      margin-top: 5px;
      border-collapse: separate;
      border-spacing: 3px;
    }

    .rating_misc {
      background-color: rgba(203, 223, 218, .6);
    }

    .rating_base {
      background-color: rgba(189, 213, 146, .6);
    }

    .rating_silt {
      background-color: rgba(127, 206, 106, .6);
    }

    .rating_sand {
      background-color: rgba(228, 214, 114, .6);
    }

    .rating_pebble {
      background-color: rgba(255, 174, 48, .6);
    }

    .rating_stone {
      background-color: rgba(255, 106, 15, .6);
    }

    .rating_rock {
      background-color: rgba(229, 57, 98, .6);
    }

    .rating_boulder {
      background-color: rgba(235, 0, 0, .6);
    }

    /* Text colors for line text in LogLine &amp; Search viewers. */
    .text_ads {
      color: rgb(169, 169, 169);
    }

    .text_misc {
      color: rgb(99, 127, 121);
    }

    .text_bse,
    .text_base {
      color: rgb(141, 174, 105);
    }

    .text_slt,
    .text_silt {
      color: rgb(71, 169, 62);
    }

    .text_snd,
    .text_sand {
      color: rgb(173, 166, 74);
    }

    .text_pbs,
    .text_pebble {
      color: rgb(244, 167, 46);
    }

    .text_stn,
    .text_stone {
      color: rgb(203, 86, 0);
    }

    .text_rck,
    .text_rock {
      color: rgb(218, 56, 104);
    }

    .text_bld,
    .text_boulder {
      color: rgb(255, 0, 0);
    }

    .text_af_autofix {
      color: rgb(71, 169, 62);
    }

    .text_af_override {
      color: rgb(203, 86, 0);
    }

    .text_af_doubtful {
      color: rgb(218, 56, 104);
    }

    .text_af_rocks {
      color: rgb(255, 0, 0);
    }

    /* colors for pygal legend boxes */
    .color-misc {
      fill: rgba(203, 223, 202, 1);
    }

    .color-base {
      fill: rgba(189, 213, 146, 1);
    }

    .color-silt {
      fill: rgba(127, 206, 106, 1);
    }

    .color-sand {
      fill: rgba(228, 214, 114, 1);
    }

    .color-pebble {
      fill: rgba(255, 174, 48, 1);
    }

    .color-stone {
      fill: rgba(255, 106, 15, 1);
    }

    .color-rock {
      fill: rgba(236, 76, 144, 1);
    }

    .color-boulder {
      fill: rgba(215, 0, 0, 1);
    }

    .color-ads {
      fill: rgba(120, 120, 120, 1);
    }

    .color-allow {
      fill: rgba(84, 168, 28, 1);
    }

    .color-block {
      fill: rgba(213, 0, 0, 1);
    }

    /* end of pygal legend box colors */

    .lightbox .box {
      width: -webkit-min-content;
      width: -moz-min-content;
      width: min-content;
      min-width: 500px;
      max-width: 600px;
      margin: 2% auto;
      padding: 20px;
      background-color: #FFF;
      box-shadow: 0px 1px 26px -3px #777777;
      border-radius: 10px;
      max-height: 600px;
    }

    .lightbox .close {
      float: right;
      display: block;
      text-decoration: none;
      font-family: Gotham, "Helvetica Neue", Helvetica, Arial, sans-serif;
      font-size: 22px;
      color: #858585;
    }

    .lightbox {
      /** Hide the lightbox */
      display: none;
      /** Apply basic lightbox styling */
      position: fixed;
      z-index: 9999;
      width: 100%;
      top: 0;
      left: 0;
      color: #333333;
    }

    .lightbox:target {
      /** Show lightbox when it is target */
      display: block;
      outline: none;
    }

    #popScroll {
      display: block;
      padding: 10px 0 0 0px;
      overflow-y: auto;
      max-height: 430px;
    }

    @page {
      size: 8.5in 11in;
      margin-left: .3in;
      margin-right: .3in;

      @bottom-left {
        content: "Usage Report - Anna Susan Burkholder";
        font-size: 10pt;
      }

      @right-bottom {
        content: "";
      }

      @bottom-right {
        counter-increment: page;
        counter-reset: page 1;
        content: "Page "counter(page) " of "counter(pages);
      }
    }

    @media print {

      h2 {
        font-size: 16pt;
      }

      h3 {
        font-size: 13pt;
      }

      hr {
        margin-top: 7pt;
        margin-bottom: 7pt;
      }

      a,
      p,
      th,
      td,
      li,
      span {
        font-size: 8pt;
      }

      p {
        margin: 0;
        line-height: 1.6;
      }

      .container {
        padding-left: 0px;
        padding-right: 0px;
        width: 100%;
      }

      #top_bar {
        display: none;
      }

      .drilldown {
        display: none;
      }

      .genrecol ol li {
        margin-bottom: 1px;
        padding-top: 3px;
        padding-bottom: 3px;
      }

      .tricol div,
      .quadcol div,
      .pageviewstricol div {
        padding-top: 1px;
      }

      .tricol span,
      .quadcol span,
      .pageviewstricol span {
        line-height: 1;
      }

      .genrecol ol&gt;li:first-child {
        padding-top: 3px;
        padding-bottom: 3px;
        font-size: 9.5pt;
      }

      /*
margin-bottom in the ol tag carries to next
column in webkit. last-child works a bit better
*/
      .genrecol ol&gt;li:last-child {
        margin-bottom: 5px;
      }

    }


    .report_info {
      width: 100%;
    }

    .info_labels {
      width: 15%;
    }

    .info_data {
      width: 10%;
    }

    #browserBar {
      display: none;
    }

    /* IE10+ has SVG scaling issues */
    @media screen and (-ms-high-contrast: active),
    (-ms-high-contrast: none) {
      #browserBar {
        display: block;
      }
    }
  &lt;/style&gt;

  &lt;style&gt;
    body {
      width: 100vw;
      height: 100vh;
      padding: 0px;
      margin: 0px;
      overflow: hidden;
    }

    .main_div {
      width: 100%;
      height: 100%;
      padding: 0px;
      margin: 0px;
      display: flex;
    }

    .left_menu_div {
      background-color: gainsboro;
      width: 250px;
      height: 100%;
      margin: 0px;
      padding: 0px 5px 0px 10px;
      border: solid yellow 0px;
    }

    .report_list {
      width: 100%;
      height: calc(100% - 33px);
      overflow: auto;
    }

    .reports_container {
      width: calc(100% - 200px);
      height: 100%;
      margin: 0px;
      overflow: hidden;
    }

    .report_page {
      background-color: white;
      width: 100%;
      height: 100%;
      margin: 0px;
      overflow: auto;
      overflow-x: hidden;
    }

    .select_button {
      width: 100%;
      margin-top: 1px;

    }

    [selected="True"] {
      color: green;
      font-weight: bold;
      background-color: white;
      border: dimgray solid 0.5px;
      border-radius: 2px;
      height: 21px;
      outline: none;
    }

    .table1 {
      font-family: arial, sans-serif;
      border-collapse: collapse;
      width: 100%;
    }

    td,
    th {
      border: 1px solid #dddddd;
      text-align: left;
      padding: 2px 5px;
      overflow: hidden;
    }

    th {
    position: sticky;
      top: 0;
      border-bottom: 2px solid black;
    }
    tr:nth-child(even) {
      background-color: #dddddd;
      padding: 2px;
    }
    tr:hover{
      background-color: #c2f6FFAA;      
    }
    tr:nth-child(even):hover {
      background-color: #c2d8d6;
    }

    .progress {
      width: calc(100% - 0px);
      height: 19px;
      padding: 0px 2px;
      background: -webkit-linear-gradient(left, rgb(161, 201, 161) var(--progress), rgb(218, 102, 102) calc(0% - var(--progress)));
      color: black;
    }
  &lt;/style&gt;

&lt;script&gt;
    function el(id) { return document.getElementById(id); }
    function selectReport(btn) {
      e = el("report_list");
      for (var i = 0; i &lt; e.children.length; i++) {
        e.children[i].setAttribute('selected', false);
      }
      btn.setAttribute('selected', true);
      el('report_page').innerHTML = el(btn.getAttribute('rpt_id')).innerHTML;
      html = el('report_page').innerHTML;
      var parser = new DOMParser();
      var parsedDocument = parser.parseFromString(html, 'text/html');

      // set the current page's &lt;html&gt; contents to the newly parsed &lt;html&gt; content
      el('report_page').innerHTML = html;

      // get a list of all &lt;script&gt; tags in the new page
      var tmpScripts = el('report_page').getElementsByTagName('script');
      if (tmpScripts.length &gt; 0) {
          // push all of the document's script tags into an array
          // (to prevent dom manipulation while iterating over dom nodes)
          var scripts = [];
          for (var i = 0; i &lt; tmpScripts.length; i++) {
              scripts.push(tmpScripts[i]);
          }

          // iterate over all script tags and create a duplicate tags for each
          for (var i = 0; i &lt; scripts.length; i++) {
              var s = document.createElement('script');
              s.innerHTML = scripts[i].innerHTML;

              // add the new node to the page
              scripts[i].parentNode.appendChild(s);

              // remove the original (non-executing) node from the page
              scripts[i].parentNode.removeChild(scripts[i]);
          }
      }
      init();
      init1();
    }

    function init1(){       
        var domainList = document.getElementById('domainList');
        var xbutton = document.getElementById('closeBox');
        xbutton.onclick = function () {
            domainList.style.display='';
        };
    
        // Set the "onclick" method after loading, so we have
        // access to the a tag's "this" context.
        var genrecols = document.getElementsByClassName('genrecol');
    
        Object.keys(genrecols).forEach(function(key){
        var alinks = genrecols[key].getElementsByTagName('a');
            Object.keys(alinks).forEach(function(key){
                alinks[key].onclick = showGenres;
            });
        });
    }

    document.addEventListener("DOMContentLoaded", function(event) { 
      el('report_page').innerHTML = el('report_summary').innerHTML;     
    });


    String.prototype.capitalize = function() {
            return this.charAt(0).toUpperCase() + this.slice(1);
        };
        
        
        
        
        function addDomainRow(urlTable, stats, index) {
            var row = urlTable.insertRow(index);
            var dom = row.insertCell(0);
            var total = row.insertCell(1);
        
            dom.innerHTML = stats[0];
            dom.className = 'dom_c1';
        
            total.innerHTML = stats[1];
            total.className = 'dom_stats_c1';
        
            if (index % 2 === 0) {
            // Yes, it's transposed, cuz header is solid BG.
            var colorcss = 'odd';
            } else {
                var colorcss = 'even';
            }
        
            dom.classList.add(colorcss);
            total.classList.add(colorcss);
        }
        
        function showGenres() {
        
            var parent_element = this.closest('div');
            var gsection = parent_element.dataset.gsection;
            var catname = this.dataset.catname;
            var catdesc = this.innerHTML.split('(')[0].trim();
        
            document.getElementById('genretitle').innerHTML = catdesc.capitalize() + ' Domains';
            var urlTable = document.getElementById('urlrows');
            urlTable.innerHTML = '';
        
            if (gsection === 'allowed') var cat_domains = allowed;
            if (gsection === 'internal') var cat_domains = internal;
            if (gsection === 'blocked') var cat_domains = blocked;
        
            var domains = cat_domains[catname]['domains'];
            for (var index in domains) {
                if (Array.isArray(domains[index])) {
                  addDomainRow(urlTable, domains[index], index);
                }
            }
        
            var domainList = document.getElementById('domainList');
            domainList.style.display='inline';
        
            // Add data attributes to parent DIV for the Modal level drilldown
            var popScroll = document.getElementById('popScroll');
            popScroll.dataset.category = catname;
            popScroll.dataset.action = parent_element.dataset.action;
            popScroll.dataset.url = "https://whitespire.compassfoundation.io" + parent_element.dataset.drilldown_url + "&amp;";
        
            // ADMIN URL is whitespire.compassfoundation.io
            // drilldown_url is 
            var modallink = document.getElementById('adrilldown');
            modallink.onclick = LogLineViewerURL;
        }
        
        // document.addEventListener("DOMContentLoaded", function() {
        
        //     var domainList = document.getElementById('domainList');
        //     var xbutton = document.getElementById('closeBox');
        //     xbutton.onclick = function () {
        //         domainList.style.display='';
        //     };
        
        //     // Set the "onclick" method after loading, so we have
        //     // access to the a tag's "this" context.
        //     var genrecols = document.getElementsByClassName('genrecol');
        
        //     Object.keys(genrecols).forEach(function(key){
        //     var alinks = genrecols[key].getElementsByTagName('a');
        //         Object.keys(alinks).forEach(function(key){
        //             alinks[key].onclick = showGenres;
        //         });
        //     });
        
        // });



  &lt;/script&gt;

&lt;/head&gt;

&lt;body&gt;</value>
            </setting>
        </SAReportsAddin.Properties.Settings>
    </applicationSettings>
</configuration>